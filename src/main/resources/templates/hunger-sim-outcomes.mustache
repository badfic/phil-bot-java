{{> members-header}}
<div class="container">
    <h1>Hunger Sim</h1>

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim">Home</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim-pronouns">Pronouns</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim-players">Players</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" href="/members/hunger-sim-outcomes">Outcomes</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim-rounds">Rounds</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim-new-game">New Game</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/members/hunger-sim-game">Run Game</a>
        </li>
    </ul>

    <div class="row">
        <div id="app">
            <form id="newOutcome">
                <div class="form-group">
                    <label for="numPlayers">Number Of Players</label>
                    <select class="form-control" id="numPlayers" v-model="numPlayers" required>
                        <option selected>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                    </select>
                </div>

                <br>
                <p>press any of these below buttons to append the variable to your Outcome Text</p>
                <div class="form-group">
                    <button type="button" class="btn btn-sm btn-outline-dark" v-for="textPaste in outcomeVariables['1']" @click="pasteValue(textPaste)">[[ textPaste ]]</button>
                </div>
                <div class="form-group" v-if="numPlayers >= 2">
                    <button type="button" class="btn btn-sm btn-outline-dark" v-for="textPaste in outcomeVariables['2']" @click="pasteValue(textPaste)">[[ textPaste ]]</button>
                </div>
                <div class="form-group" v-if="numPlayers >= 3">
                    <button type="button" class="btn btn-sm btn-outline-dark" v-for="textPaste in outcomeVariables['3']" @click="pasteValue(textPaste)">[[ textPaste ]]</button>
                </div>
                <div class="form-group" v-if="numPlayers >= 4">
                    <button type="button" class="btn btn-sm btn-outline-dark" v-for="textPaste in outcomeVariables['4']" @click="pasteValue(textPaste)">[[ textPaste ]]</button>
                </div>
                <div class="form-group">
                    <label for="outcomeText">Outcome Text</label>
                    <input type="text" class="form-control" id="outcomeText">
                </div>
                <div class="form-group">
                    <label for="player1Hp">Player 1 HP Effect</label>
                    <input type="number" step="1" class="form-control" id="player1Hp">
                </div>
                <div class="form-group" v-if="numPlayers >= 2">
                    <label for="player2Hp">Player 2 HP Effect</label>
                    <input type="number" step="1" class="form-control" id="player2Hp">
                </div>
                <div class="form-group" v-if="numPlayers >= 3">
                    <label for="player3Hp">Player 3 HP Effect</label>
                    <input type="number" step="1" class="form-control" id="player3Hp">
                </div>
                <div class="form-group" v-if="numPlayers >= 4">
                    <label for="player4Hp">Player 4 HP Effect</label>
                    <input type="number" step="1" class="form-control" id="player4Hp">
                </div>

                <button type="submit" class="btn btn-dark mb-2">Save</button>
            </form>

            <div class="card" v-for="outcome in outcomes">
                <div class="card-body">
                    <p>ID: [[ outcome.id ]]</p>
                    <p>Number of Players: [[ outcome.numPlayers ]]</p>
                    <p>Outcome Text: [[outcome.outcomeText ]]</p>
                    <p v-if="outcome.player1Hp">Player 1 HP Effect: [[ outcome.player1Hp ]]</p>
                    <p v-if="outcome.player2Hp">Player 2 HP Effect: [[ outcome.player2Hp ]]</p>
                    <p v-if="outcome.player3Hp">Player 3 HP Effect: [[ outcome.player3Hp ]]</p>
                    <p v-if="outcome.player4Hp">Player 4 HP Effect: [[ outcome.player4Hp ]]</p>
                    <form :id="outcome.id" class="deleteForm">
                        <button type="submit" class="btn btn-dark mb-2">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    const app = new Vue({
        el: "#app",
        delimiters: ["[[", "]]"],
        data: {
            outcomes: [],
            outcomeVariables: {},
            numPlayers: 1
        },
        methods: {
            refresh: refreshMethod,
            pasteValue: function(textPaste) {
                const outcomeTextElement = document.querySelector("#outcomeText");
                outcomeTextElement.value = outcomeTextElement.value + textPaste;
            }
        },
        updated: function () {
            document.querySelectorAll(".deleteForm").forEach(f => {
                f.addEventListener("submit", deleteSubmit);
            });
        },
        created: refreshMethod
    });

    function refreshMethod() {
        fetch("/members/hunger-sim/outcome")
                .then(response => response.json())
                .then(result => app.outcomes = result);

        fetch("/members/hunger-sim/outcome/variables")
                .then(response => response.json())
                .then(result => app.outcomeVariables = result);
    }

    function formSubmit(e) {
        e.preventDefault();

        const postData = {
            outcomeText: document.querySelector("#outcomeText").value,
            numPlayers: document.querySelector("#numPlayers").value,
            player1Hp: document.querySelector("#player1Hp").value,
        };

        if (postData.numPlayers >= 2) {
            postData.player2Hp = document.querySelector("#player2Hp").value;
        }
        if (postData.numPlayers >= 3) {
            postData.player3Hp = document.querySelector("#player3Hp").value;
        }
        if (postData.numPlayers >= 4) {
            postData.player4Hp = document.querySelector("#player4Hp").value;
        }

        fetch("/members/hunger-sim/outcome", {
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=utf-8"
            },
            body: JSON.stringify(postData)
        })
        .then(response => {
            if (response.ok) {
                app.refresh();
            } else {
                alert("Failed to save outcome");
            }

            return response.text();
        })
        .then(responseText => console.log(responseText))
        .catch(result => alert(result));
    }

    function deleteSubmit(e) {
        e.preventDefault();

        const idToDelete = e.target.id;

        fetch("/members/hunger-sim/outcome/" + idToDelete, {
            method: "DELETE"
        })
        .then(response => {
            if (response.ok) {
                app.refresh();
            } else {
                alert("Failed to delete outcome");
            }

            return response.text();
        })
        .then(responseText => console.log(responseText))
        .catch(result => alert(result));
    }

    document.querySelector("#newOutcome").addEventListener("submit", formSubmit);
</script>
{{> footer}}

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js" integrity="sha256-KSlsysqp7TXtFo/FHjb1T9b425x3hrvzjMWaJyKbpcI=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@stomp/stompjs@6.0.0/bundles/stomp.umd.min.js" integrity="sha256-03r1vLBsGLVOOrIHV+MpvueI7ULQABO9d2hWhEFgwD4=" crossorigin="anonymous"></script>

<script>
    var username = '{{nickname}}';
    var userAvatar = '{{userAvatar}}';

    var chatApp = new Vue({
        el: '#chatApp',
        delimiters: ['[[', ']]'],
        data: {
            messages: [],
            status: "Chat Connecting..."
        },
        updated: function() {
            $("#messageArea").scrollTop($("#messageArea")[0].scrollHeight);
        }
    });

    var messageForm = document.querySelector('#messageForm');
    var messageInput = document.querySelector('#message');

    var stompClient = new StompJs.Client({
        brokerURL: (window.location.protocol.includes('s') ? 'wss://' : 'ws://') + window.location.host + '/ws',
        debug: function(str) {
            console.log(str);
        },
        reconnectDelay: 4000,
        heartbeatIncoming: 4000,
        heartbeatOutgoing: 4000
    });

    stompClient.onConnect = function(frame) {
        stompClient.subscribe('/topic/public', onMessageReceived);

        stompClient.publish({
            destination: "/app/chat.addUser",
            body: JSON.stringify({sender: username, avatar: userAvatar, type: 'JOIN'})
        });

        chatApp.status = 'Chat Connected!';
    };

    stompClient.onStompError = function(frame) {
        chatApp.status = 'Chat Reconnecting...';
        console.log('Broker reported error: ' + frame.headers['message']);
        console.log('Additional error details: ' + frame.body);
    };

    stompClient.onWebSocketClose = function(frame) {
        chatApp.status = 'Chat Reconnecting...';
    };

    function onMessageReceived(payload) {
        var inboundMessage = JSON.parse(payload.body);
        if (inboundMessage.type === 'JOIN') {
            chatApp.messages.push({
                sender: inboundMessage.sender,
                avatar: inboundMessage.avatar,
                content: ' just connected'
            });
        } else if (inboundMessage.type === 'LEAVE') {
            chatApp.messages.push({
                sender: inboundMessage.sender,
                avatar: inboundMessage.avatar,
                content: ' just disconnected'
            });
        } else {
            chatApp.messages.push({
                sender: inboundMessage.sender,
                avatar: inboundMessage.avatar,
                content: inboundMessage.content
            });
        }
    }

    function sendMessage(event) {
        var messageContent = messageInput.value.trim();
        if (messageContent) {
            var chatMessage = {
                sender: username,
                avatar: userAvatar,
                content: messageInput.value,
                type: 'CHAT'
            };
            stompClient.publish({
                destination: "/app/chat.sendMessage",
                body: JSON.stringify(chatMessage)
            });
            messageInput.value = '';
        }
        event.preventDefault();
    }

    messageForm.addEventListener('submit', sendMessage, true);
    stompClient.activate();
</script>
name: Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  JAVA_VERSION: 21

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # https://github.com/actions/setup-java
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: ${{env.JAVA_VERSION}}

      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # https://github.com/buildpacks/github-actions
      - name: Setup Pack
        uses: buildpacks/github-actions/setup-pack@v5.7.4

      - name: Pack Default Builder
        run: pack config default-builder gcr.io/paketo-buildpacks/java

      - name: Pack Build (arm64)
        run: pack build --platform linux/arm64 --publish --tag ${{steps.meta.outputs.tags}} ${{env.REGISTRY}}/${{env.IMAGE_NAME}} --env BP_JVM_VERSION=${{env.JAVA_VERSION}}

      # https://github.com/appleboy/ssh-action
      - name: Deploy Via SSH
        uses: appleboy/ssh-action@v1.0.3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
          script: |
            cd philbot-java
            docker compose pull
            docker compose up -d
